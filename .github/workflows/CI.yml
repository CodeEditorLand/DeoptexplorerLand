name: CI
on:
  push:
    branches:
    - main
    tags:
    - "v*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
        - os: windows-latest
          platform: win32
          arch: x64
          npm_config_arch: x64
        - os: windows-latest
          platform: win32
          arch: ia32
          npm_config_arch: ia32
        - os: ubuntu-latest
          platform: linux
          arch: x64
          npm_config_arch: x64
        - os: ubuntu-latest
          platform: linux
          arch: arm64
          npm_config_arch: arm64
        - os: ubuntu-latest
          platform: linux
          arch: armhf
          npm_config_arch: arm
        - os: ubuntu-latest
          platform: alpine
          arch: x64
          npm_config_arch: x64
        - os: macos-latest
          platform: darwin
          arch: x64
          npm_config_arch: x64
        - os: macos-latest
          platform: darwin
          arch: arm64
          npm_config_arch: arm64

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm install
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        npm_config_arch: ${{ matrix.npm_config_arch }}
        npm_config_devdir: ".node-gyp"
    - shell: pwsh
      run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
    - run: npx vsce ls
      env:
        npm_config_arch: ${{ matrix.npm_config_arch }}
        npm_config_devdir: ".node-gyp"
    - run: npx vsce package --target ${{ env.target }}
      env:
        npm_config_arch: ${{ matrix.npm_config_arch }}
        npm_config_devdir: ".node-gyp"
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.target }}
        path: "*.vsix"

  fallback:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - run: npm install
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        npm_config_arch: x64
    - run: npx vsce ls
    - run: npx vsce package
    - uses: actions/upload-artifact@v3
      with:
        name: fallback
        path: "*.vsix"

  publish:
    runs-on: ubuntu-latest
    needs:
    - build
    - fallback
    if: success() && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
      - run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}