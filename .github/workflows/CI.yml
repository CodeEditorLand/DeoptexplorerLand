name: CI
on:
  push:
    branches:
    - main
    tags:
    - "v*"
  pull_request:
    branches:
    - main
    tags:
    - "v*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
        - os: windows-latest
          target: fallback
          npm_config_arch: x64
        - os: windows-latest
          target: win32-x64
          target_option: --target win32-x64
          npm_config_arch: x64
        - os: windows-latest
          target: win32-ia32
          target_option: --target win32-ia32
          npm_config_arch: ia32
        - os: ubuntu-latest
          target: linux-x64
          target_option: --target linux-x64
          npm_config_arch: x64
        - os: ubuntu-latest
          target: linux-arm64
          target_option: --target linux-arm64
          npm_config_arch: arm64
        - os: ubuntu-latest
          target: linux-armhf
          target_option: --target linux-armhf
          npm_config_arch: arm
        - os: ubuntu-latest
          target: alpine-x64
          target_option: --target alpine-x64
          npm_config_arch: x64
        - os: macos-latest
          target: darwin-x64
          target_option: --target darwin-x64
          npm_config_arch: x64
        - os: macos-latest
          target: darwin-arm64
          target_option: --target darwin-arm64
          npm_config_arch: arm64

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm install
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        npm_config_arch: ${{ matrix.npm_config_arch }}
        npm_config_devdir: ".node-gyp"
    - run: |
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo ">>> Started xvfb"
      name: start xvfb
      if: matrix.os == 'ubuntu-latest'
    - run: npm run test
      env:
        npm_config_arch: ${{ matrix.npm_config_arch }}
        npm_config_devdir: ".node-gyp"
        DISPLAY: ':99.0'
    - run: npx vsce ls
      env:
        npm_config_arch: ${{ matrix.npm_config_arch }}
        npm_config_devdir: ".node-gyp"
    - run: npx vsce package ${{ matrix.target_option }}
      env:
        npm_config_arch: ${{ matrix.npm_config_arch }}
        npm_config_devdir: ".node-gyp"
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target }}
        path: "*.vsix"
      if: github.event_name != 'pull_request'

  publish:
    runs-on: ubuntu-latest
    needs:
    - build
    if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
    steps:
      - uses: actions/download-artifact@v3
      - run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}